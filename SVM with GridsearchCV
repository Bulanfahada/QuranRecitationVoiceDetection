{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMzaXamSS0/kXIZ+BYplC1d"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"l_i-3c6XPc19","executionInfo":{"status":"ok","timestamp":1724108854494,"user_tz":-420,"elapsed":3795,"user":{"displayName":"Bulan Fahada","userId":"02901509689977923095"}}},"outputs":[],"source":["import os\n","import numpy as np\n","import librosa\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.decomposition import PCA\n","from google.colab import drive\n","from sklearn.svm import SVC\n","from sklearn.metrics import classification_report, confusion_matrix, log_loss\n","from sklearn.model_selection import GridSearchCV, train_test_split"]},{"cell_type":"code","source":["# Mount Google Drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TcQkMBpyPnH5","executionInfo":{"status":"ok","timestamp":1724108880313,"user_tz":-420,"elapsed":25821,"user":{"displayName":"Bulan Fahada","userId":"02901509689977923095"}},"outputId":"c8236249-5513-42c1-bfb9-ed056e7662cb"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["# Path ke dataset di Google Drive\n","data_dir = '/content/drive/MyDrive/Colab Notebooks/Dataset/qdata_1500/qdata_1500_ya'"],"metadata":{"id":"Yu2UKrmOPxh6","executionInfo":{"status":"ok","timestamp":1724108880314,"user_tz":-420,"elapsed":4,"user":{"displayName":"Bulan Fahada","userId":"02901509689977923095"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["def pre_emphasis(signal, alpha=0.97):\n","    return np.append(signal[0], signal[1:] - alpha * signal[:-1])\n","\n","def extract_features(file_path):\n","    audio, sr = librosa.load(file_path, sr=None)\n","    emphasized_audio = pre_emphasis(audio)\n","\n","    mfccs = librosa.feature.mfcc(y=emphasized_audio, sr=sr, n_mfcc=13)\n","    chroma = librosa.feature.chroma_stft(y=emphasized_audio, sr=sr)\n","    mel = librosa.feature.melspectrogram(y=emphasized_audio, sr=sr)\n","    contrast = librosa.feature.spectral_contrast(y=emphasized_audio, sr=sr)\n","\n","    features = np.hstack([\n","        np.mean(mfccs.T, axis=0),\n","        np.mean(chroma.T, axis=0),\n","        np.mean(mel.T, axis=0),\n","        np.mean(contrast.T, axis=0)\n","    ])\n","\n","    return features\n","\n","def load_data(data_dir):\n","    labels = []\n","    features = []\n","\n","    for root, dirs, files in os.walk(data_dir):\n","        for file in files:\n","            if file.endswith('.wav'):\n","                file_path = os.path.join(root, file)\n","                label = 1 if 'Benar' in root else 0\n","                labels.append(label)\n","                features.append(extract_features(file_path))\n","\n","    return np.array(features), np.array(labels)"],"metadata":{"id":"0zejoyayP6jH","executionInfo":{"status":"ok","timestamp":1724111774174,"user_tz":-420,"elapsed":374,"user":{"displayName":"Bulan Fahada","userId":"02901509689977923095"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":["# Load training and validation data\n","X, y = load_data(data_dir)"],"metadata":{"id":"mgVbdPPoP6zG","executionInfo":{"status":"ok","timestamp":1724112263286,"user_tz":-420,"elapsed":487336,"user":{"displayName":"Bulan Fahada","userId":"02901509689977923095"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["# Split data into training and validation sets\n","X_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=0.2, stratify=y, random_state=42)"],"metadata":{"id":"VGCjSVlEP8WK","executionInfo":{"status":"ok","timestamp":1724109542937,"user_tz":-420,"elapsed":5,"user":{"displayName":"Bulan Fahada","userId":"02901509689977923095"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["# Normalisasi fitur\n","scaler = StandardScaler()\n","X_train = scaler.fit_transform(X_train)\n","X_valid = scaler.transform(X_valid)"],"metadata":{"id":"8RzFgaQ8SUGH","executionInfo":{"status":"ok","timestamp":1724109542937,"user_tz":-420,"elapsed":3,"user":{"displayName":"Bulan Fahada","userId":"02901509689977923095"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["# Reduksi dimensi dengan PCA\n","pca = PCA(n_components=20)\n","X_train = pca.fit_transform(X_train)\n","X_valid = pca.transform(X_valid)"],"metadata":{"id":"z5OaLg87SWdZ","executionInfo":{"status":"ok","timestamp":1724109543535,"user_tz":-420,"elapsed":601,"user":{"displayName":"Bulan Fahada","userId":"02901509689977923095"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["# Define parameter grid for SVM\n","param_grid = {\n","    'C': [0.1, 1, 10, 100],\n","    'gamma': [1, 0.1, 0.01, 0.001],\n","    'kernel': ['rbf', 'poly', 'sigmoid']\n","}"],"metadata":{"id":"u65RHwbzSYKk","executionInfo":{"status":"ok","timestamp":1724109543535,"user_tz":-420,"elapsed":3,"user":{"displayName":"Bulan Fahada","userId":"02901509689977923095"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["# Create and train the SVM model with GridSearchCV\n","svm = SVC(probability=True, class_weight='balanced')\n","grid = GridSearchCV(svm, param_grid, refit=True, verbose=2, cv=5)\n","grid.fit(X_train, y_train)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"c4Kms4_fSZ3C","executionInfo":{"status":"ok","timestamp":1724109623729,"user_tz":-420,"elapsed":80197,"user":{"displayName":"Bulan Fahada","userId":"02901509689977923095"}},"outputId":"b3d49a26-dd5e-43a8-b268-b0c43f354d58"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["Fitting 5 folds for each of 48 candidates, totalling 240 fits\n","[CV] END .........................C=0.1, gamma=1, kernel=rbf; total time=   1.2s\n","[CV] END .........................C=0.1, gamma=1, kernel=rbf; total time=   0.4s\n","[CV] END .........................C=0.1, gamma=1, kernel=rbf; total time=   0.3s\n","[CV] END .........................C=0.1, gamma=1, kernel=rbf; total time=   0.7s\n","[CV] END .........................C=0.1, gamma=1, kernel=rbf; total time=   0.3s\n","[CV] END ........................C=0.1, gamma=1, kernel=poly; total time=   0.5s\n","[CV] END ........................C=0.1, gamma=1, kernel=poly; total time=   0.7s\n","[CV] END ........................C=0.1, gamma=1, kernel=poly; total time=   0.6s\n","[CV] END ........................C=0.1, gamma=1, kernel=poly; total time=   0.6s\n","[CV] END ........................C=0.1, gamma=1, kernel=poly; total time=   0.6s\n","[CV] END .....................C=0.1, gamma=1, kernel=sigmoid; total time=   0.3s\n","[CV] END .....................C=0.1, gamma=1, kernel=sigmoid; total time=   0.3s\n","[CV] END .....................C=0.1, gamma=1, kernel=sigmoid; total time=   0.3s\n","[CV] END .....................C=0.1, gamma=1, kernel=sigmoid; total time=   0.3s\n","[CV] END .....................C=0.1, gamma=1, kernel=sigmoid; total time=   0.3s\n","[CV] END .......................C=0.1, gamma=0.1, kernel=rbf; total time=   0.2s\n","[CV] END .......................C=0.1, gamma=0.1, kernel=rbf; total time=   0.3s\n","[CV] END .......................C=0.1, gamma=0.1, kernel=rbf; total time=   0.3s\n","[CV] END .......................C=0.1, gamma=0.1, kernel=rbf; total time=   0.2s\n","[CV] END .......................C=0.1, gamma=0.1, kernel=rbf; total time=   0.3s\n","[CV] END ......................C=0.1, gamma=0.1, kernel=poly; total time=   0.2s\n","[CV] END ......................C=0.1, gamma=0.1, kernel=poly; total time=   0.2s\n","[CV] END ......................C=0.1, gamma=0.1, kernel=poly; total time=   0.2s\n","[CV] END ......................C=0.1, gamma=0.1, kernel=poly; total time=   0.2s\n","[CV] END ......................C=0.1, gamma=0.1, kernel=poly; total time=   0.2s\n","[CV] END ...................C=0.1, gamma=0.1, kernel=sigmoid; total time=   0.3s\n","[CV] END ...................C=0.1, gamma=0.1, kernel=sigmoid; total time=   0.3s\n","[CV] END ...................C=0.1, gamma=0.1, kernel=sigmoid; total time=   0.3s\n","[CV] END ...................C=0.1, gamma=0.1, kernel=sigmoid; total time=   0.3s\n","[CV] END ...................C=0.1, gamma=0.1, kernel=sigmoid; total time=   0.3s\n","[CV] END ......................C=0.1, gamma=0.01, kernel=rbf; total time=   0.3s\n","[CV] END ......................C=0.1, gamma=0.01, kernel=rbf; total time=   0.4s\n","[CV] END ......................C=0.1, gamma=0.01, kernel=rbf; total time=   0.4s\n","[CV] END ......................C=0.1, gamma=0.01, kernel=rbf; total time=   0.4s\n","[CV] END ......................C=0.1, gamma=0.01, kernel=rbf; total time=   0.4s\n","[CV] END .....................C=0.1, gamma=0.01, kernel=poly; total time=   0.3s\n","[CV] END .....................C=0.1, gamma=0.01, kernel=poly; total time=   0.3s\n","[CV] END .....................C=0.1, gamma=0.01, kernel=poly; total time=   0.3s\n","[CV] END .....................C=0.1, gamma=0.01, kernel=poly; total time=   0.3s\n","[CV] END .....................C=0.1, gamma=0.01, kernel=poly; total time=   0.3s\n","[CV] END ..................C=0.1, gamma=0.01, kernel=sigmoid; total time=   0.5s\n","[CV] END ..................C=0.1, gamma=0.01, kernel=sigmoid; total time=   0.5s\n","[CV] END ..................C=0.1, gamma=0.01, kernel=sigmoid; total time=   0.5s\n","[CV] END ..................C=0.1, gamma=0.01, kernel=sigmoid; total time=   0.5s\n","[CV] END ..................C=0.1, gamma=0.01, kernel=sigmoid; total time=   0.3s\n","[CV] END .....................C=0.1, gamma=0.001, kernel=rbf; total time=   0.3s\n","[CV] END .....................C=0.1, gamma=0.001, kernel=rbf; total time=   0.3s\n","[CV] END .....................C=0.1, gamma=0.001, kernel=rbf; total time=   0.3s\n","[CV] END .....................C=0.1, gamma=0.001, kernel=rbf; total time=   0.3s\n","[CV] END .....................C=0.1, gamma=0.001, kernel=rbf; total time=   0.2s\n","[CV] END ....................C=0.1, gamma=0.001, kernel=poly; total time=   0.2s\n","[CV] END ....................C=0.1, gamma=0.001, kernel=poly; total time=   0.2s\n","[CV] END ....................C=0.1, gamma=0.001, kernel=poly; total time=   0.2s\n","[CV] END ....................C=0.1, gamma=0.001, kernel=poly; total time=   0.2s\n","[CV] END ....................C=0.1, gamma=0.001, kernel=poly; total time=   0.2s\n","[CV] END .................C=0.1, gamma=0.001, kernel=sigmoid; total time=   0.3s\n","[CV] END .................C=0.1, gamma=0.001, kernel=sigmoid; total time=   0.3s\n","[CV] END .................C=0.1, gamma=0.001, kernel=sigmoid; total time=   0.3s\n","[CV] END .................C=0.1, gamma=0.001, kernel=sigmoid; total time=   0.3s\n","[CV] END .................C=0.1, gamma=0.001, kernel=sigmoid; total time=   0.3s\n","[CV] END ...........................C=1, gamma=1, kernel=rbf; total time=   0.3s\n","[CV] END ...........................C=1, gamma=1, kernel=rbf; total time=   0.3s\n","[CV] END ...........................C=1, gamma=1, kernel=rbf; total time=   0.3s\n","[CV] END ...........................C=1, gamma=1, kernel=rbf; total time=   0.3s\n","[CV] END ...........................C=1, gamma=1, kernel=rbf; total time=   0.3s\n","[CV] END ..........................C=1, gamma=1, kernel=poly; total time=   0.5s\n","[CV] END ..........................C=1, gamma=1, kernel=poly; total time=   0.6s\n","[CV] END ..........................C=1, gamma=1, kernel=poly; total time=   0.6s\n","[CV] END ..........................C=1, gamma=1, kernel=poly; total time=   0.5s\n","[CV] END ..........................C=1, gamma=1, kernel=poly; total time=   0.7s\n","[CV] END .......................C=1, gamma=1, kernel=sigmoid; total time=   0.2s\n","[CV] END .......................C=1, gamma=1, kernel=sigmoid; total time=   0.2s\n","[CV] END .......................C=1, gamma=1, kernel=sigmoid; total time=   0.3s\n","[CV] END .......................C=1, gamma=1, kernel=sigmoid; total time=   0.3s\n","[CV] END .......................C=1, gamma=1, kernel=sigmoid; total time=   0.2s\n","[CV] END .........................C=1, gamma=0.1, kernel=rbf; total time=   0.2s\n","[CV] END .........................C=1, gamma=0.1, kernel=rbf; total time=   0.3s\n","[CV] END .........................C=1, gamma=0.1, kernel=rbf; total time=   0.4s\n","[CV] END .........................C=1, gamma=0.1, kernel=rbf; total time=   0.4s\n","[CV] END .........................C=1, gamma=0.1, kernel=rbf; total time=   0.4s\n","[CV] END ........................C=1, gamma=0.1, kernel=poly; total time=   0.5s\n","[CV] END ........................C=1, gamma=0.1, kernel=poly; total time=   0.6s\n","[CV] END ........................C=1, gamma=0.1, kernel=poly; total time=   0.5s\n","[CV] END ........................C=1, gamma=0.1, kernel=poly; total time=   0.6s\n","[CV] END ........................C=1, gamma=0.1, kernel=poly; total time=   0.7s\n","[CV] END .....................C=1, gamma=0.1, kernel=sigmoid; total time=   0.4s\n","[CV] END .....................C=1, gamma=0.1, kernel=sigmoid; total time=   0.5s\n","[CV] END .....................C=1, gamma=0.1, kernel=sigmoid; total time=   0.4s\n","[CV] END .....................C=1, gamma=0.1, kernel=sigmoid; total time=   0.3s\n","[CV] END .....................C=1, gamma=0.1, kernel=sigmoid; total time=   0.3s\n","[CV] END ........................C=1, gamma=0.01, kernel=rbf; total time=   0.2s\n","[CV] END ........................C=1, gamma=0.01, kernel=rbf; total time=   0.2s\n","[CV] END ........................C=1, gamma=0.01, kernel=rbf; total time=   0.2s\n","[CV] END ........................C=1, gamma=0.01, kernel=rbf; total time=   0.2s\n","[CV] END ........................C=1, gamma=0.01, kernel=rbf; total time=   0.2s\n","[CV] END .......................C=1, gamma=0.01, kernel=poly; total time=   0.2s\n","[CV] END .......................C=1, gamma=0.01, kernel=poly; total time=   0.2s\n","[CV] END .......................C=1, gamma=0.01, kernel=poly; total time=   0.2s\n","[CV] END .......................C=1, gamma=0.01, kernel=poly; total time=   0.2s\n","[CV] END .......................C=1, gamma=0.01, kernel=poly; total time=   0.2s\n","[CV] END ....................C=1, gamma=0.01, kernel=sigmoid; total time=   0.2s\n","[CV] END ....................C=1, gamma=0.01, kernel=sigmoid; total time=   0.2s\n","[CV] END ....................C=1, gamma=0.01, kernel=sigmoid; total time=   0.2s\n","[CV] END ....................C=1, gamma=0.01, kernel=sigmoid; total time=   0.2s\n","[CV] END ....................C=1, gamma=0.01, kernel=sigmoid; total time=   0.2s\n","[CV] END .......................C=1, gamma=0.001, kernel=rbf; total time=   0.2s\n","[CV] END .......................C=1, gamma=0.001, kernel=rbf; total time=   0.2s\n","[CV] END .......................C=1, gamma=0.001, kernel=rbf; total time=   0.2s\n","[CV] END .......................C=1, gamma=0.001, kernel=rbf; total time=   0.2s\n","[CV] END .......................C=1, gamma=0.001, kernel=rbf; total time=   0.2s\n","[CV] END ......................C=1, gamma=0.001, kernel=poly; total time=   0.2s\n","[CV] END ......................C=1, gamma=0.001, kernel=poly; total time=   0.2s\n","[CV] END ......................C=1, gamma=0.001, kernel=poly; total time=   0.2s\n","[CV] END ......................C=1, gamma=0.001, kernel=poly; total time=   0.2s\n","[CV] END ......................C=1, gamma=0.001, kernel=poly; total time=   0.2s\n","[CV] END ...................C=1, gamma=0.001, kernel=sigmoid; total time=   0.3s\n","[CV] END ...................C=1, gamma=0.001, kernel=sigmoid; total time=   0.3s\n","[CV] END ...................C=1, gamma=0.001, kernel=sigmoid; total time=   0.3s\n","[CV] END ...................C=1, gamma=0.001, kernel=sigmoid; total time=   0.3s\n","[CV] END ...................C=1, gamma=0.001, kernel=sigmoid; total time=   0.3s\n","[CV] END ..........................C=10, gamma=1, kernel=rbf; total time=   0.3s\n","[CV] END ..........................C=10, gamma=1, kernel=rbf; total time=   0.3s\n","[CV] END ..........................C=10, gamma=1, kernel=rbf; total time=   0.3s\n","[CV] END ..........................C=10, gamma=1, kernel=rbf; total time=   0.3s\n","[CV] END ..........................C=10, gamma=1, kernel=rbf; total time=   0.3s\n","[CV] END .........................C=10, gamma=1, kernel=poly; total time=   0.5s\n","[CV] END .........................C=10, gamma=1, kernel=poly; total time=   0.6s\n","[CV] END .........................C=10, gamma=1, kernel=poly; total time=   0.7s\n","[CV] END .........................C=10, gamma=1, kernel=poly; total time=   1.1s\n","[CV] END .........................C=10, gamma=1, kernel=poly; total time=   1.1s\n","[CV] END ......................C=10, gamma=1, kernel=sigmoid; total time=   0.4s\n","[CV] END ......................C=10, gamma=1, kernel=sigmoid; total time=   0.4s\n","[CV] END ......................C=10, gamma=1, kernel=sigmoid; total time=   0.4s\n","[CV] END ......................C=10, gamma=1, kernel=sigmoid; total time=   0.4s\n","[CV] END ......................C=10, gamma=1, kernel=sigmoid; total time=   0.4s\n","[CV] END ........................C=10, gamma=0.1, kernel=rbf; total time=   0.4s\n","[CV] END ........................C=10, gamma=0.1, kernel=rbf; total time=   0.4s\n","[CV] END ........................C=10, gamma=0.1, kernel=rbf; total time=   0.2s\n","[CV] END ........................C=10, gamma=0.1, kernel=rbf; total time=   0.3s\n","[CV] END ........................C=10, gamma=0.1, kernel=rbf; total time=   0.3s\n","[CV] END .......................C=10, gamma=0.1, kernel=poly; total time=   0.5s\n","[CV] END .......................C=10, gamma=0.1, kernel=poly; total time=   0.5s\n","[CV] END .......................C=10, gamma=0.1, kernel=poly; total time=   0.5s\n","[CV] END .......................C=10, gamma=0.1, kernel=poly; total time=   0.6s\n","[CV] END .......................C=10, gamma=0.1, kernel=poly; total time=   0.6s\n","[CV] END ....................C=10, gamma=0.1, kernel=sigmoid; total time=   0.3s\n","[CV] END ....................C=10, gamma=0.1, kernel=sigmoid; total time=   0.3s\n","[CV] END ....................C=10, gamma=0.1, kernel=sigmoid; total time=   0.3s\n","[CV] END ....................C=10, gamma=0.1, kernel=sigmoid; total time=   0.3s\n","[CV] END ....................C=10, gamma=0.1, kernel=sigmoid; total time=   0.3s\n","[CV] END .......................C=10, gamma=0.01, kernel=rbf; total time=   0.2s\n","[CV] END .......................C=10, gamma=0.01, kernel=rbf; total time=   0.2s\n","[CV] END .......................C=10, gamma=0.01, kernel=rbf; total time=   0.2s\n","[CV] END .......................C=10, gamma=0.01, kernel=rbf; total time=   0.2s\n","[CV] END .......................C=10, gamma=0.01, kernel=rbf; total time=   0.2s\n","[CV] END ......................C=10, gamma=0.01, kernel=poly; total time=   0.2s\n","[CV] END ......................C=10, gamma=0.01, kernel=poly; total time=   0.1s\n","[CV] END ......................C=10, gamma=0.01, kernel=poly; total time=   0.2s\n","[CV] END ......................C=10, gamma=0.01, kernel=poly; total time=   0.1s\n","[CV] END ......................C=10, gamma=0.01, kernel=poly; total time=   0.2s\n","[CV] END ...................C=10, gamma=0.01, kernel=sigmoid; total time=   0.2s\n","[CV] END ...................C=10, gamma=0.01, kernel=sigmoid; total time=   0.2s\n","[CV] END ...................C=10, gamma=0.01, kernel=sigmoid; total time=   0.2s\n","[CV] END ...................C=10, gamma=0.01, kernel=sigmoid; total time=   0.2s\n","[CV] END ...................C=10, gamma=0.01, kernel=sigmoid; total time=   0.2s\n","[CV] END ......................C=10, gamma=0.001, kernel=rbf; total time=   0.2s\n","[CV] END ......................C=10, gamma=0.001, kernel=rbf; total time=   0.2s\n","[CV] END ......................C=10, gamma=0.001, kernel=rbf; total time=   0.2s\n","[CV] END ......................C=10, gamma=0.001, kernel=rbf; total time=   0.2s\n","[CV] END ......................C=10, gamma=0.001, kernel=rbf; total time=   0.2s\n","[CV] END .....................C=10, gamma=0.001, kernel=poly; total time=   0.2s\n","[CV] END .....................C=10, gamma=0.001, kernel=poly; total time=   0.2s\n","[CV] END .....................C=10, gamma=0.001, kernel=poly; total time=   0.2s\n","[CV] END .....................C=10, gamma=0.001, kernel=poly; total time=   0.2s\n","[CV] END .....................C=10, gamma=0.001, kernel=poly; total time=   0.2s\n","[CV] END ..................C=10, gamma=0.001, kernel=sigmoid; total time=   0.2s\n","[CV] END ..................C=10, gamma=0.001, kernel=sigmoid; total time=   0.2s\n","[CV] END ..................C=10, gamma=0.001, kernel=sigmoid; total time=   0.4s\n","[CV] END ..................C=10, gamma=0.001, kernel=sigmoid; total time=   0.4s\n","[CV] END ..................C=10, gamma=0.001, kernel=sigmoid; total time=   0.4s\n","[CV] END .........................C=100, gamma=1, kernel=rbf; total time=   0.5s\n","[CV] END .........................C=100, gamma=1, kernel=rbf; total time=   0.5s\n","[CV] END .........................C=100, gamma=1, kernel=rbf; total time=   0.5s\n","[CV] END .........................C=100, gamma=1, kernel=rbf; total time=   0.5s\n","[CV] END .........................C=100, gamma=1, kernel=rbf; total time=   0.5s\n","[CV] END ........................C=100, gamma=1, kernel=poly; total time=   1.0s\n","[CV] END ........................C=100, gamma=1, kernel=poly; total time=   0.9s\n","[CV] END ........................C=100, gamma=1, kernel=poly; total time=   0.6s\n","[CV] END ........................C=100, gamma=1, kernel=poly; total time=   0.6s\n","[CV] END ........................C=100, gamma=1, kernel=poly; total time=   0.6s\n","[CV] END .....................C=100, gamma=1, kernel=sigmoid; total time=   0.3s\n","[CV] END .....................C=100, gamma=1, kernel=sigmoid; total time=   0.2s\n","[CV] END .....................C=100, gamma=1, kernel=sigmoid; total time=   0.3s\n","[CV] END .....................C=100, gamma=1, kernel=sigmoid; total time=   0.2s\n","[CV] END .....................C=100, gamma=1, kernel=sigmoid; total time=   0.2s\n","[CV] END .......................C=100, gamma=0.1, kernel=rbf; total time=   0.3s\n","[CV] END .......................C=100, gamma=0.1, kernel=rbf; total time=   0.3s\n","[CV] END .......................C=100, gamma=0.1, kernel=rbf; total time=   0.2s\n","[CV] END .......................C=100, gamma=0.1, kernel=rbf; total time=   0.3s\n","[CV] END .......................C=100, gamma=0.1, kernel=rbf; total time=   0.3s\n","[CV] END ......................C=100, gamma=0.1, kernel=poly; total time=   0.5s\n","[CV] END ......................C=100, gamma=0.1, kernel=poly; total time=   0.6s\n","[CV] END ......................C=100, gamma=0.1, kernel=poly; total time=   0.5s\n","[CV] END ......................C=100, gamma=0.1, kernel=poly; total time=   0.7s\n","[CV] END ......................C=100, gamma=0.1, kernel=poly; total time=   0.6s\n","[CV] END ...................C=100, gamma=0.1, kernel=sigmoid; total time=   0.3s\n","[CV] END ...................C=100, gamma=0.1, kernel=sigmoid; total time=   0.3s\n","[CV] END ...................C=100, gamma=0.1, kernel=sigmoid; total time=   0.3s\n","[CV] END ...................C=100, gamma=0.1, kernel=sigmoid; total time=   0.3s\n","[CV] END ...................C=100, gamma=0.1, kernel=sigmoid; total time=   0.3s\n","[CV] END ......................C=100, gamma=0.01, kernel=rbf; total time=   0.2s\n","[CV] END ......................C=100, gamma=0.01, kernel=rbf; total time=   0.2s\n","[CV] END ......................C=100, gamma=0.01, kernel=rbf; total time=   0.3s\n","[CV] END ......................C=100, gamma=0.01, kernel=rbf; total time=   0.3s\n","[CV] END ......................C=100, gamma=0.01, kernel=rbf; total time=   0.4s\n","[CV] END .....................C=100, gamma=0.01, kernel=poly; total time=   0.3s\n","[CV] END .....................C=100, gamma=0.01, kernel=poly; total time=   0.3s\n","[CV] END .....................C=100, gamma=0.01, kernel=poly; total time=   0.3s\n","[CV] END .....................C=100, gamma=0.01, kernel=poly; total time=   0.3s\n","[CV] END .....................C=100, gamma=0.01, kernel=poly; total time=   0.3s\n","[CV] END ..................C=100, gamma=0.01, kernel=sigmoid; total time=   0.3s\n","[CV] END ..................C=100, gamma=0.01, kernel=sigmoid; total time=   0.3s\n","[CV] END ..................C=100, gamma=0.01, kernel=sigmoid; total time=   0.3s\n","[CV] END ..................C=100, gamma=0.01, kernel=sigmoid; total time=   0.3s\n","[CV] END ..................C=100, gamma=0.01, kernel=sigmoid; total time=   0.3s\n","[CV] END .....................C=100, gamma=0.001, kernel=rbf; total time=   0.4s\n","[CV] END .....................C=100, gamma=0.001, kernel=rbf; total time=   0.4s\n","[CV] END .....................C=100, gamma=0.001, kernel=rbf; total time=   0.4s\n","[CV] END .....................C=100, gamma=0.001, kernel=rbf; total time=   0.4s\n","[CV] END .....................C=100, gamma=0.001, kernel=rbf; total time=   0.4s\n","[CV] END ....................C=100, gamma=0.001, kernel=poly; total time=   0.2s\n","[CV] END ....................C=100, gamma=0.001, kernel=poly; total time=   0.2s\n","[CV] END ....................C=100, gamma=0.001, kernel=poly; total time=   0.2s\n","[CV] END ....................C=100, gamma=0.001, kernel=poly; total time=   0.2s\n","[CV] END ....................C=100, gamma=0.001, kernel=poly; total time=   0.2s\n","[CV] END .................C=100, gamma=0.001, kernel=sigmoid; total time=   0.2s\n","[CV] END .................C=100, gamma=0.001, kernel=sigmoid; total time=   0.2s\n","[CV] END .................C=100, gamma=0.001, kernel=sigmoid; total time=   0.2s\n","[CV] END .................C=100, gamma=0.001, kernel=sigmoid; total time=   0.2s\n","[CV] END .................C=100, gamma=0.001, kernel=sigmoid; total time=   0.2s\n"]},{"output_type":"execute_result","data":{"text/plain":["GridSearchCV(cv=5, estimator=SVC(class_weight='balanced', probability=True),\n","             param_grid={'C': [0.1, 1, 10, 100], 'gamma': [1, 0.1, 0.01, 0.001],\n","                         'kernel': ['rbf', 'poly', 'sigmoid']},\n","             verbose=2)"],"text/html":["<style>#sk-container-id-1 {color: black;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=5, estimator=SVC(class_weight=&#x27;balanced&#x27;, probability=True),\n","             param_grid={&#x27;C&#x27;: [0.1, 1, 10, 100], &#x27;gamma&#x27;: [1, 0.1, 0.01, 0.001],\n","                         &#x27;kernel&#x27;: [&#x27;rbf&#x27;, &#x27;poly&#x27;, &#x27;sigmoid&#x27;]},\n","             verbose=2)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=5, estimator=SVC(class_weight=&#x27;balanced&#x27;, probability=True),\n","             param_grid={&#x27;C&#x27;: [0.1, 1, 10, 100], &#x27;gamma&#x27;: [1, 0.1, 0.01, 0.001],\n","                         &#x27;kernel&#x27;: [&#x27;rbf&#x27;, &#x27;poly&#x27;, &#x27;sigmoid&#x27;]},\n","             verbose=2)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: SVC</label><div class=\"sk-toggleable__content\"><pre>SVC(class_weight=&#x27;balanced&#x27;, probability=True)</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SVC</label><div class=\"sk-toggleable__content\"><pre>SVC(class_weight=&#x27;balanced&#x27;, probability=True)</pre></div></div></div></div></div></div></div></div></div></div>"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["# Mendapatkan parameter terbaik\n","best_params = grid.best_params_"],"metadata":{"id":"XV1yQCIHSbE8","executionInfo":{"status":"ok","timestamp":1724109623729,"user_tz":-420,"elapsed":13,"user":{"displayName":"Bulan Fahada","userId":"02901509689977923095"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["print(f\"Parameter terbaik:\")\n","print(f\"C: {best_params['C']}\")\n","print(f\"gamma: {best_params['gamma']}\")\n","print(f\"kernel: {best_params['kernel']}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y0Ug6N59SzSh","executionInfo":{"status":"ok","timestamp":1724111763432,"user_tz":-420,"elapsed":392,"user":{"displayName":"Bulan Fahada","userId":"02901509689977923095"}},"outputId":"ca75ecb5-6728-425d-b91d-7b3941ed1312"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["Parameter terbaik:\n","C: 10\n","gamma: 0.1\n","kernel: rbf\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import numpy as np\n","\n","# Gunakan hasil reduksi PCA menjadi 2 dimensi untuk visualisasi\n","pca_2d = PCA(n_components=2)\n","X_train_2d = pca_2d.fit_transform(X_train)\n","X_valid_2d = pca_2d.transform(X_valid)\n","\n","# Latih model SVM pada data 2D\n","svm = SVC(kernel='linear', C=1)\n","svm.fit(X_train_2d, y_train)\n","\n","# Plotting data dan hyperplane\n","plt.figure(figsize=(10, 6))\n","\n","# Plot titik-titik data\n","colors = ['red' if label == 0 else 'blue' for label in y_train]\n","plt.scatter(X_train_2d[:, 0], X_train_2d[:, 1], c=colors, edgecolors='k', marker='o')\n","\n","# Plot hyperplane\n","w = svm.coef_[0]\n","a = -w[0] / w[1]\n","xx = np.linspace(X_train_2d[:, 0].min() - 1, X_train_2d[:, 0].max() + 1)\n","yy = a * xx - (svm.intercept_[0]) / w[1]\n","plt.plot(xx, yy, 'k-', linewidth=2)\n","\n","# Plot margins\n","margin = 1 / np.sqrt(np.sum(svm.coef_ ** 2))\n","yy_margin1 = yy + np.sqrt(1 + a ** 2) * margin\n","yy_margin2 = yy - np.sqrt(1 + a ** 2) * margin\n","plt.plot(xx, yy_margin1, 'k--', linewidth=2)\n","plt.plot(xx, yy_margin2, 'k--', linewidth=2)\n","\n","# Set title dan labels\n","plt.title('SVM with Linear Kernel: Decision Boundary and Margins')\n","plt.xlabel('Principal Component 1')\n","plt.ylabel('Principal Component 2')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":446},"id":"PeDUkqJOEaRE","executionInfo":{"status":"ok","timestamp":1724111766302,"user_tz":-420,"elapsed":1077,"user":{"displayName":"Bulan Fahada","userId":"02901509689977923095"}},"outputId":"e0ac7099-bfef-42b2-acfe-65c8e876700a"},"execution_count":27,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Perform predictions on the validation set\n","y_pred = grid.predict(X_valid)"],"metadata":{"id":"s3nKuZNvS1Lo","executionInfo":{"status":"ok","timestamp":1724109623729,"user_tz":-420,"elapsed":11,"user":{"displayName":"Bulan Fahada","userId":"02901509689977923095"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["# Evaluate the model\n","accuracy = grid.score(X_valid, y_valid)\n","print(f\"Validation Accuracy: {accuracy}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Gif_EzzNS271","executionInfo":{"status":"ok","timestamp":1724109623729,"user_tz":-420,"elapsed":10,"user":{"displayName":"Bulan Fahada","userId":"02901509689977923095"}},"outputId":"933dcd03-638b-4595-d5ff-3c30492505eb"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["Validation Accuracy: 0.9225589225589226\n"]}]},{"cell_type":"code","source":["# Hitung log loss\n","y_prob = grid.predict_proba(X_valid)\n","loss = log_loss(y_valid, y_prob)\n","print(f\"Validation Log Loss: {loss}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u34AJPCTS4sd","executionInfo":{"status":"ok","timestamp":1724109623729,"user_tz":-420,"elapsed":9,"user":{"displayName":"Bulan Fahada","userId":"02901509689977923095"}},"outputId":"bead2e11-8da0-4a27-add5-bada85e4a7c2"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["Validation Log Loss: 0.22182940644055124\n"]}]},{"cell_type":"code","source":["# Confusion matrix\n","conf_matrix = confusion_matrix(y_valid, y_pred)\n","print(\"Confusion Matrix:\")\n","print(conf_matrix)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XSeodK4MS6XR","executionInfo":{"status":"ok","timestamp":1724109623729,"user_tz":-420,"elapsed":8,"user":{"displayName":"Bulan Fahada","userId":"02901509689977923095"}},"outputId":"7a63b8f6-0f66-49f7-869f-7aaaaea8da5c"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["Confusion Matrix:\n","[[167   9]\n"," [ 14 107]]\n"]}]},{"cell_type":"code","source":["# Classification report\n","class_report = classification_report(y_valid, y_pred)\n","print(\"Classification Report:\")\n","print(class_report)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hBF4vn-AS71B","executionInfo":{"status":"ok","timestamp":1724109623730,"user_tz":-420,"elapsed":7,"user":{"displayName":"Bulan Fahada","userId":"02901509689977923095"}},"outputId":"54333776-f3c4-4fd3-cc8a-d2a97e06d82e"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Classification Report:\n","              precision    recall  f1-score   support\n","\n","           0       0.92      0.95      0.94       176\n","           1       0.92      0.88      0.90       121\n","\n","    accuracy                           0.92       297\n","   macro avg       0.92      0.92      0.92       297\n","weighted avg       0.92      0.92      0.92       297\n","\n"]}]},{"cell_type":"code","source":["# **Langkah Tambahan: Pengujian dengan Dataset Uji**\n","\n","# Path ke dataset uji\n","test_data_dir = '/content/drive/MyDrive/Colab Notebooks/Dataset/qdata_1500/qdata_1500_ya/Testing'"],"metadata":{"id":"39LzB99JS-UF","executionInfo":{"status":"ok","timestamp":1724109623730,"user_tz":-420,"elapsed":6,"user":{"displayName":"Bulan Fahada","userId":"02901509689977923095"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["# Load dan preprocess data uji\n","X_test, y_test = load_data(test_data_dir)"],"metadata":{"id":"DnYx4W-STA9z","executionInfo":{"status":"ok","timestamp":1724109660663,"user_tz":-420,"elapsed":36938,"user":{"displayName":"Bulan Fahada","userId":"02901509689977923095"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["# Terapkan normalisasi dan PCA yang sama seperti data pelatihan\n","X_test = scaler.transform(X_test)\n","X_test = pca.transform(X_test)"],"metadata":{"id":"Hc8E4vtSTCmb","executionInfo":{"status":"ok","timestamp":1724109660664,"user_tz":-420,"elapsed":13,"user":{"displayName":"Bulan Fahada","userId":"02901509689977923095"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["# Path ke dataset uji\n","test_data_dir = '/content/drive/MyDrive/Colab Notebooks/Dataset/qdata_1500/qdata_1500_ya/Testing'\n","\n","# Load dan preprocess data uji\n","X_test, y_test = load_data(test_data_dir)\n","\n","# Terapkan normalisasi dan PCA yang sama seperti data pelatihan\n","X_test = scaler.transform(X_test)\n","X_test = pca.transform(X_test)\n","\n","# Lakukan prediksi pada data uji\n","y_test_pred = grid.predict(X_test)\n","\n","# Hasil prediksi\n","print(\"Prediksi Label untuk Dataset Uji:\")\n","print(y_test_pred)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4CcFJ5UZTZ3o","executionInfo":{"status":"ok","timestamp":1724109699723,"user_tz":-420,"elapsed":39061,"user":{"displayName":"Bulan Fahada","userId":"02901509689977923095"}},"outputId":"fe89b5f0-e62f-4c95-fe17-63d7f43e5a0f"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["Prediksi Label untuk Dataset Uji:\n","[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n"," 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n"," 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import numpy as np\n","\n","# Gunakan hasil reduksi PCA menjadi 2 dimensi untuk visualisasi\n","pca_2d = PCA(n_components=2)\n","X_train_2d = pca_2d.fit_transform(X_train)\n","X_valid_2d = pca_2d.transform(X_valid)\n","\n","# Latih model SVM pada data 2D\n","svm = SVC(kernel='linear', C=1)\n","svm.fit(X_train_2d, y_train)\n","\n","# Plotting data dan hyperplane\n","plt.figure(figsize=(10, 6))\n","\n","# Plot titik-titik data\n","colors = ['red' if label == 0 else 'blue' for label in y_train]\n","plt.scatter(X_train_2d[:, 0], X_train_2d[:, 1], c=colors, edgecolors='k', marker='o')\n","\n","# Plot hyperplane\n","w = svm.coef_[0]\n","a = -w[0] / w[1]\n","xx = np.linspace(X_train_2d[:, 0].min() - 1, X_train_2d[:, 0].max() + 1)\n","yy = a * xx - (svm.intercept_[0]) / w[1]\n","plt.plot(xx, yy, 'k-', linewidth=2)\n","\n","# Plot margins\n","margin = 1 / np.sqrt(np.sum(svm.coef_ ** 2))\n","yy_margin1 = yy + np.sqrt(1 + a ** 2) * margin\n","yy_margin2 = yy - np.sqrt(1 + a ** 2) * margin\n","plt.plot(xx, yy_margin1, 'k--', linewidth=2)\n","plt.plot(xx, yy_margin2, 'k--', linewidth=2)\n","\n","# Set title dan labels\n","plt.title('SVM with Linear Kernel: Decision Boundary and Margins')\n","plt.xlabel('Principal Component 1')\n","plt.ylabel('Principal Component 2')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":446},"id":"zeDutEIM5SR7","executionInfo":{"status":"ok","timestamp":1724111727486,"user_tz":-420,"elapsed":2596,"user":{"displayName":"Bulan Fahada","userId":"02901509689977923095"}},"outputId":"3ce92e7c-db36-4c54-f27c-e1d0a105cde4"},"execution_count":25,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAA1sAAAIjCAYAAAD1OgEdAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAACSfUlEQVR4nOzdd3wT9R/H8XeSTigts5SyBZSN7CUogkxBloigTMGBIApuRXChqICIgAPBiSIg/hxsGYKADFFARZbsDW2BUtom398faWLTQRNoKIXX8/EIJHf3vftcLknvne/dxWKMMQIAAAAAZCtrThcAAAAAAFcjwhYAAAAA+AFhCwAAAAD8gLAFAAAAAH5A2AIAAAAAPyBsAQAAAIAfELYAAAAAwA8IWwAAAADgB4QtAAAAAPADwhaAy2rZsmWyWCxatmyZ19POmjXLb/X8+++/slgsmj59ut+WgcyVKVNGffr0yekyLprFYtHIkSN9atOnTx+VKVPGL/Vc7W655RbdcsstOV1Gjhg5cqQsFktOl5FtLua9A+RGhC3gCrV582Z17dpVpUuXVkhIiIoXL67bbrtN77zzjiRp48aNslgseu655zKdx/bt22WxWPTYY49J+u+PtdVq1b59+9JNHxcXp9DQUFksFj388MP+WbEMfPHFFxo/fny2z3f69OmyWCxav359ts/7SuHapsePH/cYvm/fPpUrV04FCxbUxo0bc6g6/3KFcdctODhYRYsW1S233KJXX31Vx44dy+kSryiuLxZS38LDw3XjjTdq4sSJstvtOV0iskGfPn3c2/bcuXPpxrv+LlgsFr355ps5UCFwbQnI6QIApPfLL7+oWbNmKlWqlAYMGKCoqCjt27dPa9as0dtvv63BgwerVq1aqlixombMmKGXX345w/l88cUXkqR77rnHY3hwcLBmzJihJ554wmP4nDlz/LNCqTRt2lTnzp1TUFCQR51btmzR0KFD/b78tEqXLq1z584pMDDwsi/bXw4cOKBmzZrp5MmTWrx4sWrVqpXTJfnVkCFDVLduXdntdh07dky//PKLXnjhBY0dO1YzZ87Urbfe6rdlnzt3TgEBvv0p/eCDD+RwOPxUUdbuvvtutW3bVpIUGxurH3/8UYMHD9aePXv0xhtv5FhdyD4BAQGKj4/Xd999p27dunmM+/zzzxUSEqKEhIQcqs7pYt47QG7Eqxy4Ar3yyiuKiIjQunXrlD9/fo9xR48edd/v2bOnnn/+ea1Zs0YNGjRIN58ZM2aoYsWK6Xa227Ztm2HY+uKLL9SuXTvNnj07+1YmDavVqpCQEL/N31cWi+WKqicj8fHxypMnj1fTHjx4UM2aNdOJEye0aNEi1a5d+5KXf/bsWeXNm/eS5+MvTZo0UdeuXT2G/f7772rZsqW6dOmiP//8U8WKFfPLsi/mtZPTwb5WrVoeX8A89NBDql+/vr744otrKmwlJyfL4XB4fPFztQgODlbjxo01Y8aMdGHLH5/zCQkJCgoKktXq/QFTV/rnLpBdOIwQuALt3LlTVapUSRe0JCkyMtJ9v2fPnpL+68FKbcOGDdq2bZt7mtR69OihTZs26e+//3YPO3z4sH766Sf16NHDqxo7d+6cLsS1b99eFotF//vf/9zD1q5dK4vFonnz5klKf87WLbfcoh9++EF79uxxH9qS9nwWh8OhV155RSVKlFBISIiaN2+uHTt2eFVnVjI6Z6tPnz4KCwvTgQMH1LFjR4WFhalIkSIaPnx4ukOtHA6Hxo8frypVqigkJERFixbV/fffr1OnTnlM9+2336pdu3aKjo5WcHCwypUrp5deeind/G655RZVrVpVGzZsUNOmTZUnTx4988wzXq3LoUOH1KxZMx09elQLFy5UnTp1PMb//fff6tq1qwoWLKiQkBDVqVPHY1tJ/x16uXz5cj300EOKjIxUiRIlPGr7888/1axZM+XJk0fFixfXmDFj0tVy/vx5vfDCCypfvryCg4NVsmRJPfHEEzp//nyW67Fz507t3LnTq3XOTI0aNTR+/HjFxMRo4sSJHuMOHDigfv36qWjRogoODlaVKlX00UcfpZtHQkKCRo4cqeuvv14hISEqVqyYOnfu7FFb2vNOTp8+raFDh6pMmTIKDg5WZGSkbrvtNo9DOTM6Z+vs2bMaNmyYSpYsqeDgYN1www168803ZYzxmM51iO/cuXNVtWpVd/3z58+/6OfKYrGoaNGiGfYyTJo0SVWqVFFwcLCio6M1aNAgxcTEeEyT2Xl3ac+vcr33Z86c6dX7+f3331e5cuUUGhqqevXq6eeff043TWJiokaMGKHatWsrIiJCefPmVZMmTbR06VKP6Vzv8zfffFPjx49XuXLlFBwcrF9//VV58+bVI488km7e+/fvl81m0+jRozN55pzefPNNNWrUSIUKFVJoaKhq166d4Xmmvmy7lStXqm7dugoJCVG5cuX03nvvXbCGjPTo0UPz5s3z2F7r1q3T9u3bM/ycP3nypIYPH65q1aopLCxM4eHhatOmjX7//XeP6Vzb8csvv9Rzzz2n4sWLK0+ePIqLi5Mkff3116pcubJCQkJUtWpVffPNNxm+5tO+d1yHRO/YsUN9+vRR/vz5FRERob59+yo+Pt6j7aJFi3TTTTcpf/78CgsL0w033OD15yRwudGzBVyBSpcurdWrV2vLli2qWrVqptOVLVtWjRo10syZMzVu3DjZbDb3OFcAy+iPatOmTVWiRAl98cUXevHFFyVJX331lcLCwtSuXTuvamzSpIm+/fZbxcXFKTw8XMYYrVq1SlarVT///LM6dOggSfr5559ltVrVuHHjDOfz7LPPKjY2Vvv379e4ceMkSWFhYR7TvPbaa7JarRo+fLhiY2M1ZswY9ezZU2vXrvWq1otht9vVqlUr1a9fX2+++aYWL16st956S+XKldODDz7onu7+++/X9OnT1bdvXw0ZMkS7d+/WxIkT9dtvv2nVqlXuXozp06crLCxMjz32mMLCwvTTTz9pxIgRiouLS9ebcOLECbVp00bdu3fXPffco6JFi2ZZ75EjR9S1a1cdPnxYCxcuVN26dT3Gb926VY0bN1bx4sX11FNPKW/evJo5c6Y6duyo2bNnq1OnTh7TP/TQQypSpIhGjBihs2fPuoefOnVKrVu3VufOndWtWzfNmjVLTz75pKpVq6Y2bdpIcgbQDh06aOXKlRo4cKAqVaqkzZs3a9y4cfrnn380d+7cC65L8+bNJTl3kC9F165d1b9/fy1cuFCvvPKK+3lq0KCBe8e3SJEimjdvnvr376+4uDj3oax2u1233367lixZou7du+uRRx7R6dOntWjRIm3ZskXlypXLcJkPPPCAZs2apYcffliVK1fWiRMntHLlSv3111+ZHs5pjFGHDh20dOlS9e/fXzfeeKMWLFigxx9/XAcOHHC/L1xWrlypOXPm6KGHHlK+fPk0YcIEdenSRXv37lWhQoWyfF7i4+Pd5/jFxcVp3rx5mj9/vp5++mmP6UaOHKlRo0apRYsWevDBB7Vt2zZNnjxZ69at83ht+8qb9/PUqVN1//33q1GjRho6dKh27dqlDh06qGDBgipZsqR7uri4OH344Ye6++67NWDAAJ0+fVpTp05Vq1at9Ouvv+rGG2/0WPa0adOUkJCggQMHKjg4WKVKlVKnTp301VdfaezYsR6foTNmzJAxJsMvrFJ7++231aFDB/Xs2VOJiYn68ssvdeedd+r7779P93nqzbbbvHmzWrZsqSJFimjkyJFKTk7WCy+84NXnQGqdO3fWAw88oDlz5qhfv36SnH8XMjraQZJ27dqluXPn6s4771TZsmV15MgRvffee7r55pv1559/Kjo62mP6l156SUFBQRo+fLjOnz+voKAg/fDDD7rrrrtUrVo1jR49WqdOnVL//v1VvHhxr+vu1q2bypYtq9GjR2vjxo368MMPFRkZqddff12S87Ps9ttvV/Xq1fXiiy8qODhYO3bs0KpVq3x6foDLxgC44ixcuNDYbDZjs9lMw4YNzRNPPGEWLFhgEhMT00377rvvGklmwYIF7mF2u90UL17cNGzY0GPaF154wUgyx44dM8OHDzfly5d3j6tbt67p27evMcYYSWbQoEEXrHHdunVGkvnxxx+NMcb88ccfRpK58847Tf369d3TdejQwdSsWdP9eOnSpUaSWbp0qXtYu3btTOnSpdMtwzVtpUqVzPnz593D3377bSPJbN68+YI1Tps2zUgy69aty3Sa3bt3G0lm2rRp7mG9e/c2ksyLL77oMW3NmjVN7dq13Y9//vlnI8l8/vnnHtPNnz8/3fD4+Ph0y77//vtNnjx5TEJCgnvYzTffbCSZKVOmXHDdXFzbtHTp0iY8PNysXr06w+maN29uqlWr5rEsh8NhGjVqZCpUqOAe5nrObrrpJpOcnOwxD1dtn3zyiXvY+fPnTVRUlOnSpYt72KeffmqsVqv5+eefPdpPmTLFSDKrVq1yDytdurTp3bu3x3SlS5fO8PWQluv18fXXX2c6TY0aNUyBAgXcj/v372+KFStmjh8/7jFd9+7dTUREhHs7ffTRR0aSGTt2bLp5OhwO931J5oUXXnA/joiIyPK907t3b4/1mzt3rpFkXn75ZY/punbtaiwWi9mxY4fH8oKCgjyG/f7770aSeeeddy64XNdrPaPbgw8+6LFeR48eNUFBQaZly5bGbre7h0+cONFIMh999JF7WEbb0Bjn6+Xmm292P/b2/ZyYmGgiIyPNjTfe6DHd+++/byR5zDM5OdljGmOMOXXqlClatKjp169funUPDw83R48e9Zh+wYIFRpKZN2+ex/Dq1at7LCszad/biYmJpmrVqubWW2/1GO7ttuvYsaMJCQkxe/bscQ/7888/jc1mM97stvXu3dvkzZvXGON8DTVv3twY4/y7EBUVZUaNGuV+Pt544w13u4SEBI9tbYzzeQsODvb4LHRtx+uuuy7dulerVs2UKFHCnD592j1s2bJl7s+otM9H6veO67Ms9XYzxphOnTqZQoUKuR+PGzfO/XcMyA04jBC4At12221avXq1OnTooN9//11jxoxRq1atVLx48XSHfd11110KDAz0OJRw+fLlOnDgwAW/ke3Ro4d27NihdevWuf/39hBCSapZs6bCwsK0YsUKSc4erBIlSqhXr17auHGj4uPjZYzRypUr1aRJEx+fAU99+/b1OK/CNb9du3Zd0nyz8sADD3g8btKkiccyv/76a0VEROi2227T8ePH3bfatWsrLCzM41Cm0NBQ9/3Tp0/r+PHjatKkieLj4z0O55Sc51v07dvXp1qPHDmisLCwDM9NOnnypH766Sd169bNvezjx4/rxIkTatWqlbZv364DBw54tBkwYIDHt/wuYWFhHuf7BAUFqV69eumel0qVKqlixYoez4vrQhVpD/FK699//73kXq3U9Z4+fVqSswdp9uzZat++vYwxHrW1atVKsbGx7sP9Zs+ercKFC2vw4MHp5nmhy2/nz59fa9eu1cGDB72u8ccff5TNZtOQIUM8hg8bNkzGGPchuC4tWrTw6FmrXr26wsPDvX4/DBw4UIsWLdKiRYs0e/ZsDRo0SO+99577qqWStHjxYiUmJmro0KEe5+EMGDBA4eHh+uGHH7xev7Syej+vX79eR48e1QMPPOAxXZ8+fRQREeExL5vN5p7G4XDo5MmTSk5OVp06dTK8CmeXLl1UpEgRj2EtWrRQdHS0Pv/8c/ewLVu26I8//kh3caGMpH5vnzp1SrGxsWrSpEmGy89q29ntdi1YsEAdO3ZUqVKl3NNVqlRJrVq1yrKWtHr06KFly5a5DxM/fPhwpp/zwcHB7m1tt9t14sQJ9yF6Ga1L7969Pdb94MGD2rx5s3r16uVxdMLNN9+satWqeV1zRp+7J06ccB+m6Dq8/ttvv83RC80A3iJsAVeounXras6cOTp16pR+/fVXPf300zp9+rS6du2qP//80z1doUKF1KpVK33zzTfuq0t98cUXCggISHdidGo1a9ZUxYoV9cUXX+jzzz9XVFSUT1dts9lsatiwofs8ip9//llNmjTRTTfdJLvdrjVr1ujPP//UyZMnLzlspd7pkKQCBQpIUrrzorJTSEhIup2yAgUKeCxz+/btio2NVWRkpIoUKeJxO3PmjMfFTLZu3apOnTopIiJC4eHhKlKkiHtHLjY21mM5xYsX9/mk/c8++0wnT57Ubbfd5rFcSdqxY4eMMXr++efT1fnCCy9IUro2ZcuWzXA5JUqUSBc2Mnpetm7dmm5Z119/fYbL8qczZ84oX758kqRjx44pJiZG77//frraXOHWVdvOnTt1ww03+Hy1tDFjxmjLli0qWbKk6tWrp5EjR2YZgvbs2aPo6Gh3nS6VKlVyj08t7ftBSr8NLqRChQpq0aKFWrRooc6dO2vixIl66KGHNH78eG3evNljmTfccINH26CgIF133XXpavJFVu9n17wrVKjgMV1gYKCuu+66dPP7+OOPVb16dYWEhKhQoUIqUqSIfvjhh3TvKynj17XValXPnj01d+5c97lBriv23XnnnVmuz/fff68GDRooJCREBQsWVJEiRTR58uQMl5/Vtjt27JjOnTuXbt2l9NvCG23btlW+fPn01Vdf6fPPP1fdunVVvnz5DKd1OBwaN26cKlSooODgYBUuXFhFihTRH3/84dVz6dpuGc0/s2VmJKvXx1133aXGjRvrvvvuU9GiRdW9e3fNnDmT4IUrFudsAVe4oKAg1a1bV3Xr1tX111+vvn376uuvv3bvJEvOS7t///33+v7779WhQwfNnj3bfcz/hfTo0UOTJ09Wvnz5dNddd/l0JSlJuummm/TKK68oISFBP//8s5599lnlz59fVatW1c8//+w+x+BSw1ZGPSyS0l08IDtltszUHA6HIiMjPb4RT831/MfExOjmm29WeHi4XnzxRZUrV04hISHauHGjnnzyyXQ7Cam/LfbWzTffrJkzZ6pz585q1aqVli1b5u4FcM1/+PDhmX47nnZnKLMavNkWDodD1apV09ixYzOcNvU5N/6UlJSkf/75x33eo+t5uOeee9S7d+8M21SvXv2SltmtWzc1adJE33zzjRYuXKg33nhDr7/+uubMmeM+p+1S+eP90Lx5c02cOFErVqzwqRdCyrynz263Z1hrdtb/2WefqU+fPurYsaMef/xxRUZGui9qkdFFVjJ7Xffq1UtvvPGG5s6dq7vvvltffPGFbr/99nQ9aWm5zk9t2rSpJk2apGLFiikwMFDTpk3L8MJFl/uzLDg4WJ07d9bHH3+sXbt2XfBHhF999VU9//zz6tevn1566SUVLFhQVqtVQ4cOzTDIXMznlDeyeo5CQ0O1YsUKLV26VD/88IPmz5+vr776SrfeeqsWLlzo1Wc3cDkRtoBcxHV1uUOHDnkM79Chg/Lly6cvvvhCgYGBOnXqVJYndUvOsDVixAgdOnRIn376qc/1NGnSRImJiZoxY4YOHDjgDlVNmzZ1h63rr78+yxO7L3RY1pWsXLlyWrx4sRo3bnzBHY9ly5bpxIkTmjNnjpo2beoevnv37mytp3379vroo4/Uu3dv3X777Vq4cKFCQ0PdvQGBgYFq0aJFti4zI+XKldPvv/+u5s2b5+i2nTVrls6dO+cOmEWKFFG+fPlkt9uzfB7KlSuntWvXKikpyecLQRQrVkwPPfSQHnroIR09elS1atXSK6+8kmnYKl26tBYvXqzTp0979G65Di8tXbq0T8u/GMnJyZKcPYGpl7lt2zaP3qTExETt3r3b4/krUKBAuisUSs6ejox6orLiWvb27ds9etuTkpK0e/du1ahRwz1s1qxZuu666zRnzhyP11rqL6O8UbVqVdWsWVOff/65SpQoob1797p/QP5CZs+erZCQEC1YsEDBwcHu4dOmTfNp+S5FihRRaGiotm/fnm7ctm3bLmqePXr00EcffSSr1aru3btnOt2sWbPUrFkzTZ061WN4TEyMChcunOVyXNstoytLZtfVY12sVquaN2+u5s2ba+zYsXr11Vf17LPPaunSpZflMw7wBYcRAlegpUuXZvhN548//igp/eEkoaGh6tSpk3788UdNnjxZefPm1R133JHlcsqVK6fx48dr9OjRqlevns911q9fX4GBgXr99ddVsGBBValSRZIzhK1Zs0bLly/3qlcrb968GR6mcqXr1q2b7Ha7XnrppXTjkpOT3Tugrm9aU2/TxMRETZo0KdtruvfeezV+/HitXLlSXbp0UVJSkiIjI3XLLbfovffeSxfUJeehS9mpW7duOnDggD744IN0486dO+dxdcOMZMel33///XcNHTpUBQoU0KBBgyQ5t0OXLl00e/ZsbdmyJV2b1M9Dly5ddPz48XSXjZcy74Ww2+3pXseRkZGKjo6+4CXv27ZtK7vdnm5Z48aNk8ViybYesQv57rvvJMkdZFq0aKGgoCBNmDDBY32nTp2q2NhYj6vslStXTmvWrFFiYqJ72Pfff699+/ZdVC116tRRkSJFNGXKFI95Tp8+PV2oy+i9tXbtWq1evdrn5d57771auHChxo8fr0KFCnn1vNtsNlksFo+fcPj333+zvOLmhebXqlUrzZ07V3v37nUP/+uvv7RgwYKLmmezZs300ksvaeLEiYqKirrgstO+tr/++ut053NmJjo6WlWrVtUnn3ziDu2S8xxi1+Gp2eHkyZPphrmuOunNT0sAlxs9W8AVaPDgwYqPj1enTp1UsWJFJSYm6pdfftFXX32lMmXKZHjxhHvuuUeffPKJFixYoJ49e3r9I7QZ/b6Mt/LkyaPatWtrzZo17t/Ykpw9W2fPntXZs2e9Clu1a9fWV199pccee0x169ZVWFiY2rdvf9F1pfXRRx9l+Fs2l7LukvPQvfvvv1+jR4/Wpk2b1LJlSwUGBmr79u36+uuv9fbbb6tr165q1KiRChQooN69e2vIkCGyWCz69NNP/Xbo0JAhQ3Ty5EmNGjVKvXr10ueff653331XN910k6pVq6YBAwbouuuu05EjR7R69Wrt378/3W/pXIp7771XM2fO1AMPPKClS5eqcePGstvt+vvvvzVz5kwtWLAg3W+Apebrpd9//vlnJSQkuE/qX7Vqlf73v/8pIiJC33zzjccO5muvvaalS5eqfv36GjBggCpXrqyTJ09q48aNWrx4sXtHrlevXvrkk0/02GOP6ddff1WTJk109uxZLV68WA899FCGX2acPn1aJUqUUNeuXVWjRg2FhYVp8eLFWrdund56661M62/fvr2aNWumZ599Vv/++69q1KihhQsX6ttvv9XQoUMzvcz8xdq4caM+++wzd81LlizR7Nmz1ahRI7Vs2VKSs4fl6aef1qhRo9S6dWt16NBB27Zt06RJk1S3bl2PC0fcd999mjVrllq3bq1u3bpp586d+uyzzy667sDAQL388su6//77deutt+quu+7S7t27NW3atHQ9ZbfffrvmzJmjTp06qV27dtq9e7emTJmiypUre+zwe6NHjx564okn9M033+jBBx/0qkezXbt2Gjt2rFq3bq0ePXro6NGjevfdd1W+fHn98ccfPi3fZdSoUZo/f76aNGmihx56SMnJyXrnnXdUpUqVi5qn1WrVc889l+V0t99+u1588UX17dtXjRo10ubNm/X555/71Dv56quv6o477lDjxo3Vt29fnTp1ShMnTlTVqlV93h6ZefHFF7VixQq1a9dOpUuX1tGjRzVp0iSVKFFCN910U7YsA8hWl/vyhwCyNm/ePNOvXz9TsWJFExYWZoKCgkz58uXN4MGDzZEjRzJsk5ycbIoVK+ZxOfa0Ul/6/ULkxaXfXR5//HEjybz++usew8uXL28kmZ07d3oMz+jS72fOnDE9evQw+fPn97hEcGaX9s7ocu0ZcV3GPLPbvn37Mr30u+vSyam5nr+03n//fVO7dm0TGhpq8uXLZ6pVq2aeeOIJc/DgQfc0q1atMg0aNDChoaEmOjrafTn/tM/FzTffbKpUqXLB9cqopoy26eDBg40k88ADDxhjjNm5c6fp1auXiYqKMoGBgaZ48eLm9ttvN7NmzUr3nGV0ufzMakt7KXNjnJe/fv31102VKlVMcHCwKVCggKldu7YZNWqUiY2NdU+XHZd+d90CAwNNkSJFTNOmTc0rr7yS7hLfLkeOHDGDBg0yJUuWNIGBgSYqKso0b97cvP/++x7TxcfHm2effdaULVvWPV3Xrl09XtNKdfnq8+fPm8cff9zUqFHD5MuXz+TNm9fUqFHDTJo0Kcvn6/Tp0+bRRx810dHRJjAw0FSoUMG88cYbHpdjdy0vo/dmZpdfTy2jS78HBASY6667zjz++OMel+t2mThxoqlYsaIJDAw0RYsWNQ8++KA5depUuuneeustU7x4cRMcHGwaN25s1q9fn+ml3719P0+aNMmULVvWBAcHmzp16pgVK1akm6fD4TCvvvqqKV26tAkODjY1a9Y033//fbrnOKNLnWekbdu2RpL55ZdfLjhdalOnTjUVKlQwwcHBpmLFimbatGkZflb4su2WL19uateubYKCgsx1111npkyZkunnT1qZfX6lltml34cNG2aKFStmQkNDTePGjc3q1au93o4uX375palYsaIJDg42VatWNf/73/9Mly5dTMWKFT2mS/3eMSbzzzLXZ9Lu3buNMcYsWbLE3HHHHSY6OtoEBQWZ6Ohoc/fdd5t//vkny+cGyAkWY/x4hjkAAEAu0alTJ23evDnbzzG61t14440q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/Xd9+umniomJ0csvv6yNGzdqzpw5CgoKkiQZY/xWKAAAAADkJl73bM2dO1fvvfeeunbtqvvuu0/r16/XsWPH1L59e50/f16SZLFY/FYoAAAAAOQmXoetY8eOqXTp0u7HhQsX1uLFi3X69Gm1bdtW8fHxfikQAAAAAHIjr8NWqVKl9Ndff3kMy5cvnxYuXKhz586pU6dO2V4cAAAAAORWXoetli1batq0aemGh4WFacGCBQoJCcnWwgAAAAAgN/P6AhmjRo3SwYMHMxyXL18+LVq0SBs3bsy2wgAAAAAgN/M6bBUoUEAFChTIdHy+fPl08803Z0tRAAAAAJDb+fyjxtlpxYoVat++vaKjo2WxWDR37lyP8X369JHFYvG4tW7d2mOakydPqmfPngoPD1f+/PnVv39/nTlzxmOaP/74Q02aNFFISIhKliypMWPG+HvVAAAAAFzjcjRsnT17VjVq1NC7776b6TStW7fWoUOH3LcZM2Z4jO/Zs6e2bt2qRYsW6fvvv9eKFSs0cOBA9/i4uDi1bNlSpUuX1oYNG/TGG29o5MiRev/99/22XgAAAADg9WGE/tCmTRu1adPmgtMEBwcrKioqw3F//fWX5s+fr3Xr1qlOnTqSpHfeeUdt27bVm2++qejoaH3++edKTEzURx99pKCgIFWpUkWbNm3S2LFjPUIZAAAAAGSnHO3Z8sayZcsUGRmpG264QQ8++KBOnDjhHrd69Wrlz5/fHbQkqUWLFrJarVq7dq17mqZNmyooKMg9TatWrbRt2zadOnUqw2WeP39ecXFxHjcAAAAA8IXPYctms+no0aPphp84cUI2my1binJp3bq1PvnkEy1ZskSvv/66li9frjZt2shut0uSDh8+rMjISI82AQEBKliwoA4fPuyepmjRoh7TuB67pklr9OjRioiIcN9KliyZresFAAAA4Orn82GExpgMh58/f96j9yg7dO/e3X2/WrVqql69usqVK6dly5apefPm2bqs1J5++mk99thj7sdxcXEELgAAAAA+8TpsTZgwQZJksVj04YcfKiwszD3ObrdrxYoVqlixYvZXmMp1112nwoULa8eOHWrevLmioqLS9bIlJyfr5MmT7vO8oqKidOTIEY9pXI8zOxcsODhYwcHBflgDAAAAANcKr8PWuHHjJDl7tqZMmeJxyGBQUJDKlCmjKVOmZH+F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f3btUkhQkFq3aaObb7lFCxcs0G/r1yswMFC3tWmjYcOGqXLlypdxbbL2yy+/6L0pU7T199+VN18+deraVX369FH+/PlzujS/iYmJ0Zo1a2S321WnTh3FxMTop59+0oEDB7R06TL98ssq97Rly5ZTkyaNVadOHXXr1k1ffPGFnn36aSWdPy+rpERJIUFBeua55/Tcc8/JYnHu3r755pt6/PHHVcdm0912u2ySZtlsWmm366mnntLo0aNzZN2zkzFGLZo108aVK/WB3a5mkk6n3J6zWDTPZtPKVatUr169HK702lKzalXV37pVUzIZ/6SkWSVKaOe+fZezLFxmDodDS5Ys0WeffaajR4+pVKmS6tevn+rVq+f+nELul5iYqLZt22vp0mVyOHpJai/ptKzWj+VwLNJrr72mJ598MqfL9Nny5cs19s039eO8eUq221W7Rg09NGSI+vTpkyt+O4zf2cpmuTVsnTx5Unv37lVERITKli0rY4xWr16tVatWKSgoSPHx8dq1a5d27typM2fOaOfOnYqNjZXD4VBAQICSkpLSzTMgIEDJyck+12K1WmWMkTFGNptNpUuXVlJSkk6dOqXExET3ZUutVqscDs+OZYvFosjISD366KP6559/tH37dsXGxiomJkYxMTGy2WwqVKiQzp07p7jYWMliUfHixXXjjTeqSpUqKlWqlNq0aaNjx45p1apVevapp3Ts5EmVstl0xuHQSWMUWaiQko3R2bNnnetnpMDAPCpYqKACbA4d3L9fnY1RrKQVklwHUFklOWSTZHc9Q2rVqrl+/PFHHTx4UO+//74WL14qY4yaNWuq+++/X6VLl77gczVv3jytXbtWRYsWVb9+/bRu3TqNH/+21q79VcnJSbr++goaMmSIOnbsKJvNlul8jDEaNmyYxo0bp4IWi8KN0VlJxyUVzJ9fK1atUkBAgKZMmaLVq9coKChQxYsX1/r16xVz/LjyhoerT9++euaZZxQYGKi9e/dq165dKlCggKpXr66tW7fqs88+07Zt23TgwAElJCTozJkzslgsKliwoG688UbdddddOnTokNanBNLWrVurVq1aWrRokeLj4xUVFSWr1ark5GTt2rVL06d/pj//3KrQ0DyqW7emateurdDQUC1ZskwbNmxUcHCw7rjjdj366FBVrVo13TonJCToiSee0AcfTFVCQrzr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2rRpGiPn1yapz7e1S5posSisXDnd3aOH7HZ7hs/lww8/nG6ZGQXatF+gFCpUSC1atMgyCGckf/78KlmyZJa93xmdouBtQLxcwfJCy7xcbTOrN3Xo9bbt0aNHvQqzGX0JsXz5cq1fvz7LtqVKlfIIWwkJCXrrrbeybCdJN998s0fw+fXXXzVw4MAs20VERCgmJsZj2OjRo/Xxxx9n2fauu+5K12N94403erWPOHXqVPXr18/9eOvWrWrUqFGWYdZms2nFihUe+92ffvqp3nnnnSxDadmyZTVx4sQsa7tSXTNhS3J+AF9thw1eyXzdWc1oRywkJESlS5dON+11113n8Th//vyaPn26zzXmRp07d9Zrr73m9fSpQ29ycrJOnz6tfPnyKSAg87e/MUZJSUkKCkrbZ+LJbrdr/fr1OnTokMqUKaNq1arJZrO5l5l62efOndOmTZv022+/KSEhQTVq1FDDhg119uxZFShQQAEBAdq7d68WLVqkadOm6ffftyghIVGhoUEKCrTJZrEoX/786tSpk+677z79+uuvmjt3rk6fLqyyZduoUaNGOnfunDZu3Kjjx48rT552atSokerXr69KlSopKSlJb731liZP/kDHj09SYGCw7rqrm5566klVqVLFvU6X41u766+/XlOmTNH9998vm22pkpN7yNnD+bWkdcobGqqhjz2mRx991B1CBg4cqNq1a2vixIn6ZvFiWSwWNa9YUatWr1b5M2d0fWCgThmjY8nJatG0qWbOnn1Z1qVQoUJauWaNPvjgA330/vv68cABFS1SRM/2768HH3zQ/eVCTitRooSWr1qlPvfco07r1rmHBwUEqF///ho3fvxFPV+T33tPsbGx6v6//+mJgACVczj0h9WqE8nJGj58uIYOHZqNa5E9LBaLAgICLvgZ4BIUFJTuUDBvlS1bVmXLZnQBosx16NBBlSpU0OTduzU7OVk1U4bHyNlHfVjSTx98kOkXCTab8yIqF6N+/fpatGhR1hNmYNSoUV4dMpmRLVu2XDCQuu6nPQ+rePHi+v3337NsZ7fbVaJECY+2t912m2bOnHnBYOhwODwuRuPSo0cP1apVK8ue6EaNGmXYNiEhIct60wbhsLAw1atXL8swm/YLW8nZWxoREZFpb7lLRuHwYoOwL4caX2xv8qXUe6HzdX1dblJSkuLi4rxqmzbQHjx4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\n"},"metadata":{}}]}]}